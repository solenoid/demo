---
import { fileURLToPath } from 'node:url'
import { Navbar } from 'shared-ui'
import sqlite3 from 'sqlite3'
import { ecleticYoutubeChannels } from '../shared/constants'
import { navItems } from '../shared/mainNav'

let channels: Array<string>
try {
  channels = await new Promise((resolve, reject) => {
    let db = new sqlite3.Database(
      fileURLToPath(new URL('../../data/wip.db', import.meta.url)),
      sqlite3.OPEN_READONLY,
      (err) => {
        if (err) reject(err.message)
      }
    )
    db.get(
      'SELECT channel_ids FROM channels WHERE user_id=?',
      42,
      (err, row) => {
        if (err) {
          reject(err.message)
        }
        if (row) {
          resolve(JSON.parse(row.channel_ids))
        } else {
          reject('no channel ids in db for user')
        }
      }
    )
    db.close()
  })
} catch (e) {
  console.error(e)
  channels = ecleticYoutubeChannels
}
const API_ENDPOINT = 'http://localhost:3000/api/videos.json'
const fetchChannel = async (id: string) =>
  fetch(`${API_ENDPOINT}?channel_id=${id}`).then((r) => r.json())
const getAllChannels = async () => Promise.all(channels.map(fetchChannel))
type Entry = any

const allChannels: Array<Entry> = await getAllChannels()
const divisor = 6
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="/reset.css" />
    <link rel="stylesheet" href="/styles.css" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Youtube</title>
  </head>
  <body>
    <Navbar current="/youtube" items={navItems}>
      <main>
        {
          allChannels.map((channel) => {
            if (!channel.entries) {
              console.error(channel)
              return null
            }
            return (
              <div>
                <h3>{channel.title}</h3>
                <div class="row">
                  {channel.entries.map((video: any) => {
                    return (
                      <a
                        target="vids"
                        href={video.href}
                        title={video.title}
                        style={{ width: `${video.width / divisor}px` }}
                      >
                        <img
                          src={video.src}
                          width={video.width / divisor}
                          height={video.height / divisor}
                          alt={video.title}
                        />
                        <div class="one-line-box">
                          <span>{`${video.month}/${video.day}`}</span>
                          <span class="small-title">{video.title}</span>
                        </div>
                      </a>
                    )
                  })}
                </div>
              </div>
            )
          })
        }
      </main>
    </Navbar>
    <style>
      a {
        display: block;
        text-decoration: none;
      }
      .row {
        display: flex;
        flex-wrap: wrap;
        gap: 2px;
      }
      .small-title {
        font-size: 10px;
      }
    </style>
  </body>
</html>
